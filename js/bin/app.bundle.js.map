{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap 7c4a5ddb9f7688740c9e","webpack:///./src/js/app.js","webpack:///./src/js/KinoPlayer.js","webpack:///./src/js/helpers.js","webpack:///./src/js/parser.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","onDOMContentLoaded","window","KinoPlayer","_KinoPlayer2","_KinoPlayer","document","addEventListener","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_helpers","canvasId","videoSrc","audioSrc","subSrc","_this","this","canvasSettings","firstCompositeOperation","secondCompositeOperation","fillStyle","font","buttonWait","bW","bH","playX","playY","pauseX","pauseY","stopX","stopY","audioSettings","src","loop","videoSettings","subSettings","leftMargin","topMargin","oldVideoSettings","controlsImgSettings","Promise","all","loadVideo","loadAudio","loadSubs","loadImg","then","_initCanvas","_initMainVideo","_runLoop","_this2","_drawScreen","requestAnimationFrame","context","imgSettings","subPause","fillTextMultiLine","curSubText","drawImage","elem","oldOperation","globalCompositeOperation","fillRect","canvas","width","height","paused","forcePause","timeWaited","settings","afterSubs","setTimeout","play","curSubNum","subArray","undefined","currentTime","endTime","pause","text","startTime","eventMouseUp","event","x","y","pageX","pageY","offsetLeft","offsetTop","mouseX","mouseY","getElementById","getContext","supportedVideoFormat","video","returnExtension","canPlayType","supportedAudioFormat","audio","ctx","lineHeight","measureText","lines","split","fillText","resolve","reject","createElement","wrapper","body","appendChild","setAttribute","muted","ext","fetch","response","rawSrt","_parser2","fromSrt","Image","_parser","_typeof","Symbol","iterator","constructor","parser","pItems","data","ms","useMs","replace","regex","shift","items","push","trim","timeMs","toSrt","Array","res","s","isNaN","msTime","parseInt","val","parts","exec","measures","time","toString","join"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _KinoPlayer = __webpack_require__(1);\n\t\n\tvar _KinoPlayer2 = _interopRequireDefault(_KinoPlayer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tdocument.addEventListener('DOMContentLoaded', onDOMContentLoaded);\n\t\n\tfunction onDOMContentLoaded() {\n\t    window.KinoPlayer = new _KinoPlayer2.default('canvasOne', 'video/sherlock', 'audio/taper', 'subs/subs.srt');\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _helpers = __webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * KinoPlayer is canvas video player with adding old movie effects.\n\t */\n\tvar KinoPlayer = function () {\n\t    /**\n\t     * Create a KinoPlayer instance\n\t     * @param {string} canvasId - canvas element id\n\t     * @param {string} videoSrc - url to video without extension\n\t     * @param {string} audioSrc - url to audio without extension\n\t     * @param {string} subSrc - url to srt subtitles\n\t     */\n\t    function KinoPlayer(canvasId, videoSrc, audioSrc, subSrc) {\n\t        var _this = this;\n\t\n\t        _classCallCheck(this, KinoPlayer);\n\t\n\t        this.canvasSettings = {\n\t            id: canvasId,\n\t            firstCompositeOperation: 'color',\n\t            secondCompositeOperation: 'multiply',\n\t            fillStyle: '#FFFFFF',\n\t            font: '44px Oranienbaum',\n\t            buttonWait: 5,\n\t            bW: 32, // control button width\n\t            bH: 32, // control button height\n\t            playX: 10, // offset x for play button\n\t            playY: 678, // offset y for play button\n\t            pauseX: 50, // offset x for pause button\n\t            pauseY: 678, // offset x for pause button\n\t            stopX: 90, // offset x for stop button\n\t            stopY: 678 // offset x for stop button\n\t        };\n\t        this.audioSettings = {\n\t            src: audioSrc,\n\t            loop: true\n\t        };\n\t        this.videoSettings = {\n\t            src: videoSrc,\n\t            loop: false\n\t        };\n\t        this.subSettings = {\n\t            src: subSrc,\n\t            leftMargin: 100,\n\t            topMargin: 320\n\t        };\n\t        this.oldVideoSettings = {\n\t            src: 'video/oldfilm',\n\t            loop: true\n\t        };\n\t        this.controlsImgSettings = {\n\t            src: 'imgs/videobuttons.png'\n\t        };\n\t        Promise.all([(0, _helpers.loadVideo)(this.videoSettings), (0, _helpers.loadVideo)(this.oldVideoSettings), (0, _helpers.loadAudio)(this.audioSettings), (0, _helpers.loadSubs)(this.subSettings), (0, _helpers.loadImg)(this.controlsImgSettings)]).then(function () {\n\t            _this._initCanvas(_this.canvasSettings);\n\t            _this._initMainVideo(_this.videoSettings);\n\t            _this._runLoop();\n\t        });\n\t    }\n\t\n\t    /**\n\t     * Run game loop with request animation frame\n\t     * @private\n\t     */\n\t\n\t\n\t    _createClass(KinoPlayer, [{\n\t        key: '_runLoop',\n\t        value: function _runLoop() {\n\t            var _this2 = this;\n\t\n\t            this._drawScreen();\n\t            requestAnimationFrame(function () {\n\t                _this2._runLoop();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draw combined canvas image\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_drawScreen',\n\t        value: function _drawScreen() {\n\t            var context = this.canvasSettings.context;\n\t            var videoSettings = this.videoSettings;\n\t            var subSettings = this.subSettings;\n\t            var canvasSettings = this.canvasSettings;\n\t            var imgSettings = this.controlsImgSettings;\n\t\n\t            // Video or subtitles\n\t            if (!videoSettings.subPause) {\n\t                context.drawImage(this.videoSettings.elem, 0, 0);\n\t            } else {\n\t                (0, _helpers.fillTextMultiLine)(context, subSettings.curSubText, subSettings.leftMargin, subSettings.topMargin);\n\t            }\n\t\n\t            // Use Composite operation for effects\n\t            var oldOperation = context.globalCompositeOperation;\n\t            context.globalCompositeOperation = canvasSettings.firstCompositeOperation;\n\t            context.fillStyle = canvasSettings.fillStyle;\n\t            context.fillRect(0, 0, canvasSettings.canvas.width, canvasSettings.canvas.height);\n\t            context.globalCompositeOperation = canvasSettings.secondCompositeOperation;\n\t            context.drawImage(this.oldVideoSettings.elem, 0, 0);\n\t            context.globalCompositeOperation = oldOperation;\n\t\n\t            // Draw buttons depending on video status\n\t            if (!videoSettings.elem.paused || videoSettings.subPause && !videoSettings.forcePause) {\n\t                context.drawImage(imgSettings.elem, 0, 32, canvasSettings.bW, canvasSettings.bH, canvasSettings.playX, canvasSettings.playY, canvasSettings.bW, canvasSettings.bH); //Play Down\n\t            } else {\n\t                context.drawImage(imgSettings.elem, 0, 0, canvasSettings.bW, canvasSettings.bH, canvasSettings.playX, canvasSettings.playY, canvasSettings.bW, canvasSettings.bH); //Play up\n\t            }\n\t\n\t            if (videoSettings.elem.paused && !videoSettings.subPause || videoSettings.forcePause) {\n\t                context.drawImage(imgSettings.elem, 32, 32, canvasSettings.bW, canvasSettings.bH, canvasSettings.pauseX, canvasSettings.pauseY, canvasSettings.bW, canvasSettings.bH); // Pause down\n\t            } else {\n\t                context.drawImage(imgSettings.elem, 32, 0, canvasSettings.bW, canvasSettings.bH, canvasSettings.pauseX, canvasSettings.pauseY, canvasSettings.bW, canvasSettings.bH); // Pause up\n\t            }\n\t\n\t            context.drawImage(imgSettings.elem, 64, 0, canvasSettings.bW, canvasSettings.bH, canvasSettings.stopX, canvasSettings.stopY, canvasSettings.bW, canvasSettings.bH); // Stop up\n\t\n\t            canvasSettings.timeWaited++;\n\t        }\n\t\n\t        /**\n\t         * Extra initializing for main. Working with subtitles. Adding events.\n\t         * @param {Object} settings - main video settings\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_initMainVideo',\n\t        value: function _initMainVideo(settings) {\n\t            var videoSettings = this.videoSettings;\n\t            var subSettings = this.subSettings;\n\t            var oldVideoSettings = this.oldVideoSettings;\n\t            var audioSettings = this.audioSettings;\n\t\n\t            /**\n\t             * Play again after showing subtitles or wait if video was paused\n\t             */\n\t            function afterSubs() {\n\t                if (videoSettings.forcePause) {\n\t                    setTimeout(afterSubs, 1000);\n\t                } else {\n\t                    videoSettings.subPause = false;\n\t                    videoSettings.elem.play();\n\t                    subSettings.curSubNum++;\n\t                    if (subSettings.curSubNum >= subSettings.subArray.length) {\n\t                        subSettings.curSubNum = undefined;\n\t                    }\n\t                }\n\t            }\n\t\n\t            /**\n\t             * Check if it is time to show subtitles\n\t             */\n\t            settings.elem.addEventListener('timeupdate', function () {\n\t                if (subSettings.curSubNum !== undefined && videoSettings.elem.currentTime * 1000 >= subSettings.subArray[subSettings.curSubNum].endTime && !videoSettings.subPause) {\n\t                    videoSettings.subPause = true;\n\t                    videoSettings.elem.pause();\n\t                    subSettings.curSubText = subSettings.subArray[subSettings.curSubNum].text;\n\t                    setTimeout(afterSubs, subSettings.subArray[subSettings.curSubNum].endTime - subSettings.subArray[subSettings.curSubNum].startTime);\n\t                }\n\t            }, false);\n\t\n\t            /**\n\t             * Reset all elements when main video is ended\n\t             */\n\t            settings.elem.addEventListener('ended', function () {\n\t                oldVideoSettings.elem.pause();\n\t                videoSettings.elem.pause();\n\t                audioSettings.elem.pause();\n\t                audioSettings.elem.currentTime = 0;\n\t                videoSettings.elem.currentTime = 0;\n\t                videoSettings.subPause = false;\n\t                subSettings.curSubNum = 0;\n\t                videoSettings.forcePause = false;\n\t            }, false);\n\t        }\n\t\n\t        /**\n\t         * Canvas initializing. Adding events to video player controls.\n\t         * @param {object} settings - Canvas Settings\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_initCanvas',\n\t        value: function _initCanvas(settings) {\n\t            settings.canvas = document.getElementById(settings.id);\n\t            settings.context = settings.canvas.getContext('2d');\n\t            settings.context.font = settings.font;\n\t            settings.timeWaited = settings.buttonWait;\n\t\n\t            var videoSettings = this.videoSettings;\n\t            var audioSettings = this.audioSettings;\n\t            var oldVideoSettings = this.oldVideoSettings;\n\t            var subSettings = this.subSettings;\n\t            settings.canvas.addEventListener('mouseup', eventMouseUp, false);\n\t\n\t            /**\n\t             * Control which button is clicked\n\t             * @param event\n\t             */\n\t            function eventMouseUp(event) {\n\t                if (settings.timeWaited >= settings.buttonWait) {\n\t                    settings.timeWaited = 0;\n\t\n\t                    var x = void 0;\n\t                    var y = void 0;\n\t                    if (event.pageX || event.pageY) {\n\t                        x = event.pageX;\n\t                        y = event.pageY;\n\t                    }\n\t                    x -= settings.canvas.offsetLeft;\n\t                    y -= settings.canvas.offsetTop;\n\t\n\t                    var mouseX = x;\n\t                    var mouseY = y;\n\t\n\t                    //Hit Play\n\t                    if (mouseY >= settings.playY && mouseY <= settings.playY + settings.bH && mouseX >= settings.playX && mouseX <= settings.playX + settings.bW) {\n\t                        if (videoSettings.elem.paused) {\n\t                            videoSettings.elem.play();\n\t                            oldVideoSettings.elem.play();\n\t                            audioSettings.elem.play();\n\t                            videoSettings.forcePause = false;\n\t                        }\n\t                    }\n\t\n\t                    //Hit Stop\n\t                    if (mouseY >= settings.stopY && mouseY <= settings.stopY + settings.bH && mouseX >= settings.stopX && mouseX <= settings.stopX + settings.bW) {\n\t                        oldVideoSettings.elem.pause();\n\t                        videoSettings.elem.pause();\n\t                        audioSettings.elem.pause();\n\t                        audioSettings.elem.currentTime = 0;\n\t                        videoSettings.elem.currentTime = 0;\n\t                        videoSettings.subPause = false;\n\t                        subSettings.curSubNum = 0;\n\t                        videoSettings.forcePause = false;\n\t                    }\n\t\n\t                    //Hit Pause\n\t                    if (mouseY >= settings.pauseY && mouseY <= settings.pauseY + settings.bH && mouseX >= settings.pauseX && mouseX <= settings.pauseX + settings.bW) {\n\t                        videoSettings.forcePause = true;\n\t                        if (!videoSettings.elem.paused || videoSettings.subPause) {\n\t                            videoSettings.elem.pause();\n\t                            oldVideoSettings.elem.pause();\n\t                            audioSettings.elem.pause();\n\t                        } else {\n\t                            videoSettings.elem.play();\n\t                            oldVideoSettings.elem.play();\n\t                            audioSettings.elem.play();\n\t                            videoSettings.forcePause = false;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return KinoPlayer;\n\t}();\n\t\n\texports.default = KinoPlayer;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.fillTextMultiLine = fillTextMultiLine;\n\texports.loadVideo = loadVideo;\n\texports.loadAudio = loadAudio;\n\texports.loadSubs = loadSubs;\n\texports.loadImg = loadImg;\n\t\n\tvar _parser = __webpack_require__(3);\n\t\n\tvar _parser2 = _interopRequireDefault(_parser);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Get supported video format\n\t * @param {object} video - DOM video element\n\t * @returns {string} supported video format\n\t */\n\tfunction supportedVideoFormat(video) {\n\t    var returnExtension = '';\n\t    if (video.canPlayType('video/webm') === 'probably' || video.canPlayType('video/webm') === 'maybe') {\n\t        returnExtension = 'webm';\n\t    } else if (video.canPlayType('video/mp4') === 'probably' || video.canPlayType('video/mp4') === 'maybe') {\n\t        returnExtension = 'mp4';\n\t    } else if (video.canPlayType('video/ogg') === 'probably' || video.canPlayType('video/ogg') === 'maybe') {\n\t        returnExtension = 'ogg';\n\t    }\n\t    return returnExtension;\n\t}\n\t\n\t/**\n\t * Get supported audio format\n\t * @param {object} audio - DOM audio element\n\t * @returns {string} supported audio format\n\t */\n\tfunction supportedAudioFormat(audio) {\n\t    var returnExtension = '';\n\t    if (audio.canPlayType('audio/ogg') === 'probably' || audio.canPlayType('audio/ogg') === 'maybe') {\n\t        returnExtension = 'ogg';\n\t    } else if (audio.canPlayType('audio/wav') === 'probably' || audio.canPlayType('audio/wav') === 'maybe') {\n\t        returnExtension = 'wav';\n\t    } else if (audio.canPlayType('audio/mp3') === 'probably' || audio.canPlayType('audio/mp3') === 'maybe') {\n\t        returnExtension = 'mp3';\n\t    }\n\t    return returnExtension;\n\t}\n\t\n\t/**\n\t * Fill canvas with multiline text\n\t * @param {object} ctx - canvas context\n\t * @param {string} text - text to fill\n\t * @param {Number} x - margin left\n\t * @param {Number} y - margin top\n\t */\n\tfunction fillTextMultiLine(ctx, text, x, y) {\n\t    var lineHeight = ctx.measureText('M').width * 1.5;\n\t    var lines = text.split('\\n');\n\t    for (var i = 0; i < lines.length; ++i) {\n\t        ctx.fillText(lines[i], x, y);\n\t        y += lineHeight;\n\t    }\n\t}\n\t\n\t/**\n\t * Load and hide video DOM elem\n\t * @param {object} settings - video settings\n\t * @returns {Promise} - resolve when done\n\t */\n\tfunction loadVideo(settings) {\n\t    return new Promise(function (resolve, reject) {\n\t        settings.elem = document.createElement('video');\n\t        settings.wrapper = document.createElement('div');\n\t        document.body.appendChild(settings.wrapper);\n\t        settings.wrapper.appendChild(settings.elem);\n\t        settings.wrapper.setAttribute('style', 'display:none;');\n\t        settings.elem.loop = settings.loop;\n\t        settings.elem.muted = true;\n\t        settings.ext = '.' + supportedVideoFormat(settings.elem);\n\t        if (settings.ext === '.') {\n\t            reject();\n\t        }\n\t        settings.elem.addEventListener('canplay', function () {\n\t            resolve();\n\t        }, false);\n\t        settings.elem.setAttribute('src', settings.src + settings.ext);\n\t    });\n\t}\n\t\n\t/**\n\t * Load and hide audio DOM elem\n\t * @param {object} settings - audio settings\n\t * @returns {Promise} - resolve when done\n\t */\n\tfunction loadAudio(settings) {\n\t    return new Promise(function (resolve, reject) {\n\t        settings.elem = document.createElement('audio');\n\t        settings.elem.loop = settings.loop;\n\t        document.body.appendChild(settings.elem);\n\t        settings.ext = '.' + supportedAudioFormat(settings.elem);\n\t        if (settings.ext === '.') {\n\t            reject();\n\t        }\n\t        settings.elem.addEventListener('canplaythrough', function () {\n\t            resolve();\n\t        }, false);\n\t        settings.elem.setAttribute('src', settings.src + settings.ext);\n\t    });\n\t}\n\t\n\t/**\n\t * Load and parse srt subtitles\n\t * @param {object} settings - subtitles settings\n\t * @returns {Promise} - resolve when done\n\t */\n\tfunction loadSubs(settings) {\n\t    return new Promise(function (resolve, reject) {\n\t        fetch(settings.src).then(function (response) {\n\t            response.text().then(function (rawSrt) {\n\t                settings.subArray = _parser2.default.fromSrt(rawSrt, true);\n\t                settings.curSubNum = 0;\n\t                settings.curSubText = settings.subArray[settings.curSubNum];\n\t                resolve();\n\t            });\n\t        }).catch(reject);\n\t    });\n\t}\n\t\n\t/**\n\t * Load image\n\t * @param {object} settings - image settings\n\t * @returns {Promise} - resolve when done\n\t */\n\tfunction loadImg(settings) {\n\t    return new Promise(function (resolve) {\n\t        settings.elem = new Image();\n\t        settings.elem.addEventListener('load', function () {\n\t            resolve();\n\t        }, false);\n\t        settings.elem.src = settings.src;\n\t    });\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t/**\n\t * .srt Parser\n\t */\n\tvar parser = exports.parser = function () {\n\t    var pItems = {};\n\t\n\t    /**\n\t     * Converts SubRip subtitles into array of objects\n\t     * [{\n\t     *     id:        `Number of subtitle`\n\t     *     startTime: `Start time of subtitle`\n\t     *     endTime:   `End time of subtitle\n\t     *     text: `Text of subtitle`\n\t     * }]\n\t     *\n\t     * @param  {String}  data SubRip suntitles string\n\t     * @param  {Boolean} ms   Optional: use milliseconds for startTime and endTime\n\t     * @return {Array}\n\t     */\n\t    pItems.fromSrt = function (data, ms) {\n\t        var useMs = ms ? true : false;\n\t\n\t        data = data.replace(/\\r/g, '');\n\t        var regex = /(\\d+)\\n(\\d{2}:\\d{2}:\\d{2},\\d{3}) --> (\\d{2}:\\d{2}:\\d{2},\\d{3})/g;\n\t        data = data.split(regex);\n\t        data.shift();\n\t\n\t        var items = [];\n\t        for (var i = 0; i < data.length; i += 4) {\n\t            items.push({\n\t                id: data[i].trim(),\n\t                startTime: useMs ? timeMs(data[i + 1].trim()) : data[i + 1].trim(),\n\t                endTime: useMs ? timeMs(data[i + 2].trim()) : data[i + 2].trim(),\n\t                text: data[i + 3].trim()\n\t            });\n\t        }\n\t\n\t        return items;\n\t    };\n\t\n\t    /**\n\t     * Converts Array of objects created by this module to SubRip subtitles\n\t     * @param  {Array}  data\n\t     * @return {String}      SubRip subtitles string\n\t     */\n\t    pItems.toSrt = function (data) {\n\t        if (!data instanceof Array) return '';\n\t        var res = '';\n\t\n\t        for (var i = 0; i < data.length; i++) {\n\t            var s = data[i];\n\t\n\t            if (!isNaN(s.startTime) && !isNaN(s.endTime)) {\n\t                s.startTime = msTime(parseInt(s.startTime, 10));\n\t                s.endTime = msTime(parseInt(s.endTime, 10));\n\t            }\n\t\n\t            res += s.id + '\\r\\n';\n\t            res += s.startTime + ' --> ' + s.endTime + '\\r\\n';\n\t            res += s.text.replace('\\n', '\\r\\n') + '\\r\\n\\r\\n';\n\t        }\n\t\n\t        return res;\n\t    };\n\t\n\t    var timeMs = function timeMs(val) {\n\t        var regex = /(\\d+):(\\d{2}):(\\d{2}),(\\d{3})/;\n\t        var parts = regex.exec(val);\n\t\n\t        if (parts === null) {\n\t            return 0;\n\t        }\n\t\n\t        for (var i = 1; i < 5; i++) {\n\t            parts[i] = parseInt(parts[i], 10);\n\t            if (isNaN(parts[i])) parts[i] = 0;\n\t        }\n\t\n\t        // hours + minutes + seconds + ms\n\t        return parts[1] * 3600000 + parts[2] * 60000 + parts[3] * 1000 + parts[4];\n\t    };\n\t\n\t    var msTime = function msTime(val) {\n\t        var measures = [3600000, 60000, 1000];\n\t        var time = [];\n\t\n\t        for (var i in measures) {\n\t            var res = (val / measures[i] >> 0).toString();\n\t\n\t            if (res.length < 2) res = '0' + res;\n\t            val %= measures[i];\n\t            time.push(res);\n\t        }\n\t\n\t        var ms = val.toString();\n\t        if (ms.length < 3) {\n\t            for (i = 0; i <= 3 - ms.length; i++) {\n\t                ms = '0' + ms;\n\t            }\n\t        }\n\t\n\t        return time.join(':') + ',' + ms;\n\t    };\n\t\n\t    return pItems;\n\t}();\n\t\n\t// ignore exports for browser\n\tif (( false ? 'undefined' : _typeof(exports)) === 'object') {\n\t    module.exports = parser;\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7c4a5ddb9f7688740c9e\n **/","import KinoPlayer from './KinoPlayer';\n\ndocument.addEventListener('DOMContentLoaded', onDOMContentLoaded);\n\nfunction onDOMContentLoaded() {\n    window.KinoPlayer = new KinoPlayer('canvasOne', 'video/sherlock', 'audio/taper', 'subs/subs.srt');\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/app.js\n **/","import {\n    fillTextMultiLine,\n    loadVideo,\n    loadAudio,\n    loadSubs,\n    loadImg\n} from './helpers';\n\n/**\n * KinoPlayer is canvas video player with adding old movie effects.\n */\nexport default class KinoPlayer {\n    /**\n     * Create a KinoPlayer instance\n     * @param {string} canvasId - canvas element id\n     * @param {string} videoSrc - url to video without extension\n     * @param {string} audioSrc - url to audio without extension\n     * @param {string} subSrc - url to srt subtitles\n     */\n    constructor(canvasId, videoSrc, audioSrc, subSrc) {\n        this.canvasSettings = {\n            id: canvasId,\n            firstCompositeOperation: 'color',\n            secondCompositeOperation: 'multiply',\n            fillStyle: '#FFFFFF',\n            font: '44px Oranienbaum',\n            buttonWait: 5,\n            bW: 32, // control button width\n            bH: 32, // control button height\n            playX: 10, // offset x for play button\n            playY: 678, // offset y for play button\n            pauseX: 50, // offset x for pause button\n            pauseY: 678, // offset x for pause button\n            stopX: 90, // offset x for stop button\n            stopY: 678 // offset x for stop button\n        };\n        this.audioSettings = {\n            src: audioSrc,\n            loop: true\n        };\n        this.videoSettings = {\n            src: videoSrc,\n            loop: false\n        };\n        this.subSettings = {\n            src: subSrc,\n            leftMargin: 100,\n            topMargin: 320\n        };\n        this.oldVideoSettings = {\n            src: 'video/oldfilm',\n            loop: true\n        };\n        this.controlsImgSettings = {\n            src: 'imgs/videobuttons.png'\n        };\n        Promise.all([\n            loadVideo(this.videoSettings),\n            loadVideo(this.oldVideoSettings),\n            loadAudio(this.audioSettings),\n            loadSubs(this.subSettings),\n            loadImg(this.controlsImgSettings)\n        ]).then(() => {\n            this._initCanvas(this.canvasSettings);\n            this._initMainVideo(this.videoSettings);\n            this._runLoop();\n        });\n    }\n\n    /**\n     * Run game loop with request animation frame\n     * @private\n     */\n    _runLoop() {\n        this._drawScreen();\n        requestAnimationFrame(() => {\n            this._runLoop();\n        });\n    }\n\n    /**\n     * Draw combined canvas image\n     * @private\n     */\n    _drawScreen() {\n        const context = this.canvasSettings.context;\n        const videoSettings = this.videoSettings;\n        const subSettings = this.subSettings;\n        const canvasSettings = this.canvasSettings;\n        const imgSettings = this.controlsImgSettings;\n\n        // Video or subtitles\n        if (!videoSettings.subPause) {\n            context.drawImage(this.videoSettings.elem, 0, 0);\n        } else {\n            fillTextMultiLine(context, subSettings.curSubText, subSettings.leftMargin, subSettings.topMargin);\n        }\n\n        // Use Composite operation for effects\n        const oldOperation = context.globalCompositeOperation;\n        context.globalCompositeOperation = canvasSettings.firstCompositeOperation;\n        context.fillStyle = canvasSettings.fillStyle;\n        context.fillRect(0, 0, canvasSettings.canvas.width, canvasSettings.canvas.height);\n        context.globalCompositeOperation = canvasSettings.secondCompositeOperation;\n        context.drawImage(this.oldVideoSettings.elem, 0, 0);\n        context.globalCompositeOperation = oldOperation;\n\n        // Draw buttons depending on video status\n        if (!videoSettings.elem.paused || (videoSettings.subPause && !videoSettings.forcePause)) {\n            context.drawImage(imgSettings.elem, 0, 32, canvasSettings.bW, canvasSettings.bH, canvasSettings.playX,\n                canvasSettings.playY, canvasSettings.bW, canvasSettings.bH); //Play Down\n\n        } else {\n            context.drawImage(imgSettings.elem, 0, 0, canvasSettings.bW, canvasSettings.bH, canvasSettings.playX,\n                canvasSettings.playY, canvasSettings.bW, canvasSettings.bH); //Play up\n        }\n\n        if (videoSettings.elem.paused && !videoSettings.subPause || videoSettings.forcePause) {\n            context.drawImage(imgSettings.elem,\n                32, 32, canvasSettings.bW, canvasSettings.bH, canvasSettings.pauseX, canvasSettings.pauseY,\n                canvasSettings.bW, canvasSettings.bH); // Pause down\n        } else {\n            context.drawImage(imgSettings.elem, 32, 0, canvasSettings.bW, canvasSettings.bH, canvasSettings.pauseX,\n                canvasSettings.pauseY, canvasSettings.bW, canvasSettings.bH); // Pause up\n        }\n\n        context.drawImage(imgSettings.elem, 64, 0, canvasSettings.bW, canvasSettings.bH, canvasSettings.stopX,\n            canvasSettings.stopY, canvasSettings.bW, canvasSettings.bH); // Stop up\n\n        canvasSettings.timeWaited++;\n    }\n\n    /**\n     * Extra initializing for main. Working with subtitles. Adding events.\n     * @param {Object} settings - main video settings\n     * @private\n     */\n    _initMainVideo(settings) {\n        const videoSettings = this.videoSettings;\n        const subSettings = this.subSettings;\n        const oldVideoSettings = this.oldVideoSettings;\n        const audioSettings = this.audioSettings;\n\n        /**\n         * Play again after showing subtitles or wait if video was paused\n         */\n        function afterSubs() {\n            if (videoSettings.forcePause) {\n                setTimeout(afterSubs, 1000);\n            } else {\n                videoSettings.subPause = false;\n                videoSettings.elem.play();\n                subSettings.curSubNum++;\n                if (subSettings.curSubNum >= subSettings.subArray.length) {\n                    subSettings.curSubNum = undefined;\n                }\n            }\n        }\n\n        /**\n         * Check if it is time to show subtitles\n         */\n        settings.elem.addEventListener('timeupdate', () => {\n            if (subSettings.curSubNum !== undefined &&\n                videoSettings.elem.currentTime * 1000 >= subSettings.subArray[subSettings.curSubNum].endTime && !videoSettings.subPause) {\n                videoSettings.subPause = true;\n                videoSettings.elem.pause();\n                subSettings.curSubText = subSettings.subArray[subSettings.curSubNum].text;\n                setTimeout(afterSubs,\n                    subSettings.subArray[subSettings.curSubNum].endTime - subSettings.subArray[subSettings.curSubNum].startTime);\n            }\n        }, false);\n\n        /**\n         * Reset all elements when main video is ended\n         */\n        settings.elem.addEventListener('ended', () => {\n            oldVideoSettings.elem.pause();\n            videoSettings.elem.pause();\n            audioSettings.elem.pause();\n            audioSettings.elem.currentTime = 0;\n            videoSettings.elem.currentTime = 0;\n            videoSettings.subPause = false;\n            subSettings.curSubNum = 0;\n            videoSettings.forcePause = false;\n        }, false);\n    }\n\n    /**\n     * Canvas initializing. Adding events to video player controls.\n     * @param {object} settings - Canvas Settings\n     * @private\n     */\n    _initCanvas(settings) {\n        settings.canvas = document.getElementById(settings.id);\n        settings.context = settings.canvas.getContext('2d');\n        settings.context.font = settings.font;\n        settings.timeWaited = settings.buttonWait;\n\n        const videoSettings = this.videoSettings;\n        const audioSettings = this.audioSettings;\n        const oldVideoSettings = this.oldVideoSettings;\n        const subSettings = this.subSettings;\n        settings.canvas.addEventListener('mouseup', eventMouseUp, false);\n\n        /**\n         * Control which button is clicked\n         * @param event\n         */\n        function eventMouseUp(event) {\n            if (settings.timeWaited >= settings.buttonWait) {\n                settings.timeWaited = 0;\n\n                let x;\n                let y;\n                if (event.pageX || event.pageY) {\n                    x = event.pageX;\n                    y = event.pageY;\n                }\n                x -= settings.canvas.offsetLeft;\n                y -= settings.canvas.offsetTop;\n\n                const mouseX = x;\n                const mouseY = y;\n\n                //Hit Play\n                if ((mouseY >= settings.playY) && (mouseY <= settings.playY + settings.bH) &&\n                    (mouseX >= settings.playX) && (mouseX <= settings.playX + settings.bW)) {\n                    if (videoSettings.elem.paused) {\n                        videoSettings.elem.play();\n                        oldVideoSettings.elem.play();\n                        audioSettings.elem.play();\n                        videoSettings.forcePause = false;\n                    }\n                }\n\n                //Hit Stop\n                if ((mouseY >= settings.stopY) && (mouseY <= settings.stopY + settings.bH) &&\n                    (mouseX >= settings.stopX) && (mouseX <= settings.stopX + settings.bW)) {\n                    oldVideoSettings.elem.pause();\n                    videoSettings.elem.pause();\n                    audioSettings.elem.pause();\n                    audioSettings.elem.currentTime = 0;\n                    videoSettings.elem.currentTime = 0;\n                    videoSettings.subPause = false;\n                    subSettings.curSubNum = 0;\n                    videoSettings.forcePause = false;\n                }\n\n                //Hit Pause\n                if ((mouseY >= settings.pauseY) && (mouseY <= settings.pauseY + settings.bH) &&\n                    (mouseX >= settings.pauseX) && (mouseX <= settings.pauseX + settings.bW)) {\n                    videoSettings.forcePause = true;\n                    if (!videoSettings.elem.paused || videoSettings.subPause) {\n                        videoSettings.elem.pause();\n                        oldVideoSettings.elem.pause();\n                        audioSettings.elem.pause();\n                    } else {\n                        videoSettings.elem.play();\n                        oldVideoSettings.elem.play();\n                        audioSettings.elem.play();\n                        videoSettings.forcePause = false;\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/KinoPlayer.js\n **/","import parser from './parser';\n\n/**\n * Get supported video format\n * @param {object} video - DOM video element\n * @returns {string} supported video format\n */\nfunction supportedVideoFormat(video) {\n    let returnExtension = '';\n    if (video.canPlayType('video/webm') === 'probably' ||\n        video.canPlayType('video/webm') === 'maybe') {\n        returnExtension = 'webm';\n    } else if (video.canPlayType('video/mp4') === 'probably' ||\n        video.canPlayType('video/mp4') === 'maybe') {\n        returnExtension = 'mp4';\n    } else if (video.canPlayType('video/ogg') === 'probably' ||\n        video.canPlayType('video/ogg') === 'maybe') {\n        returnExtension = 'ogg';\n    }\n    return returnExtension;\n}\n\n/**\n * Get supported audio format\n * @param {object} audio - DOM audio element\n * @returns {string} supported audio format\n */\nfunction supportedAudioFormat(audio) {\n    let returnExtension = '';\n    if (audio.canPlayType('audio/ogg') === 'probably' ||\n        audio.canPlayType('audio/ogg') === 'maybe') {\n        returnExtension = 'ogg';\n    } else if (audio.canPlayType('audio/wav') === 'probably' ||\n        audio.canPlayType('audio/wav') === 'maybe') {\n        returnExtension = 'wav';\n    } else if (audio.canPlayType('audio/mp3') === 'probably' ||\n        audio.canPlayType('audio/mp3') === 'maybe') {\n        returnExtension = 'mp3';\n    }\n    return returnExtension;\n}\n\n/**\n * Fill canvas with multiline text\n * @param {object} ctx - canvas context\n * @param {string} text - text to fill\n * @param {Number} x - margin left\n * @param {Number} y - margin top\n */\nexport function fillTextMultiLine(ctx, text, x, y) {\n    const lineHeight = ctx.measureText('M').width * 1.5;\n    const lines = text.split('\\n');\n    for (let i = 0; i < lines.length; ++i) {\n        ctx.fillText(lines[i], x, y);\n        y += lineHeight;\n    }\n}\n\n/**\n * Load and hide video DOM elem\n * @param {object} settings - video settings\n * @returns {Promise} - resolve when done\n */\nexport function loadVideo(settings) {\n    return new Promise((resolve, reject) => {\n        settings.elem = document.createElement('video');\n        settings.wrapper = document.createElement('div');\n        document.body.appendChild(settings.wrapper);\n        settings.wrapper.appendChild(settings.elem);\n        settings.wrapper.setAttribute('style', 'display:none;');\n        settings.elem.loop = settings.loop;\n        settings.elem.muted = true;\n        settings.ext = '.' + supportedVideoFormat(settings.elem);\n        if (settings.ext === '.') {\n            reject();\n        }\n        settings.elem.addEventListener('canplay', () => {\n            resolve();\n        }, false);\n        settings.elem.setAttribute('src', settings.src + settings.ext);\n    });\n}\n\n/**\n * Load and hide audio DOM elem\n * @param {object} settings - audio settings\n * @returns {Promise} - resolve when done\n */\nexport function loadAudio(settings) {\n    return new Promise((resolve, reject) => {\n        settings.elem = document.createElement('audio');\n        settings.elem.loop = settings.loop;\n        document.body.appendChild(settings.elem);\n        settings.ext = '.' + supportedAudioFormat(settings.elem);\n        if (settings.ext === '.') {\n            reject();\n        }\n        settings.elem.addEventListener('canplaythrough', () => {\n            resolve();\n        }, false);\n        settings.elem.setAttribute('src', settings.src + settings.ext);\n    });\n}\n\n/**\n * Load and parse srt subtitles\n * @param {object} settings - subtitles settings\n * @returns {Promise} - resolve when done\n */\nexport function loadSubs(settings) {\n    return new Promise((resolve, reject) => {\n        fetch(settings.src)\n            .then((response) => {\n                response.text().then((rawSrt) => {\n                    settings.subArray = parser.fromSrt(rawSrt, true);\n                    settings.curSubNum = 0;\n                    settings.curSubText = settings.subArray[settings.curSubNum];\n                    resolve();\n                });\n            })\n            .catch(reject);\n    });\n}\n\n/**\n * Load image\n * @param {object} settings - image settings\n * @returns {Promise} - resolve when done\n */\nexport function loadImg(settings) {\n    return new Promise((resolve) => {\n        settings.elem = new Image();\n        settings.elem.addEventListener('load', () => {\n            resolve();\n        }, false);\n        settings.elem.src = settings.src;\n    });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/helpers.js\n **/","/**\n * .srt Parser\n */\nexport var parser = (function() {\n    var pItems = {};\n\n    /**\n     * Converts SubRip subtitles into array of objects\n     * [{\n     *     id:        `Number of subtitle`\n     *     startTime: `Start time of subtitle`\n     *     endTime:   `End time of subtitle\n     *     text: `Text of subtitle`\n     * }]\n     *\n     * @param  {String}  data SubRip suntitles string\n     * @param  {Boolean} ms   Optional: use milliseconds for startTime and endTime\n     * @return {Array}\n     */\n    pItems.fromSrt = function(data, ms) {\n        var useMs = ms ? true : false;\n\n        data = data.replace(/\\r/g, '');\n        var regex = /(\\d+)\\n(\\d{2}:\\d{2}:\\d{2},\\d{3}) --> (\\d{2}:\\d{2}:\\d{2},\\d{3})/g;\n        data = data.split(regex);\n        data.shift();\n\n        var items = [];\n        for (var i = 0; i < data.length; i += 4) {\n            items.push({\n                id: data[i].trim(),\n                startTime: useMs ? timeMs(data[i + 1].trim()) : data[i + 1].trim(),\n                endTime: useMs ? timeMs(data[i + 2].trim()) : data[i + 2].trim(),\n                text: data[i + 3].trim()\n            });\n        }\n\n        return items;\n    };\n\n    /**\n     * Converts Array of objects created by this module to SubRip subtitles\n     * @param  {Array}  data\n     * @return {String}      SubRip subtitles string\n     */\n    pItems.toSrt = function(data) {\n        if (!data instanceof Array) return '';\n        var res = '';\n\n        for (var i = 0; i < data.length; i++) {\n            var s = data[i];\n\n            if (!isNaN(s.startTime) && !isNaN(s.endTime)) {\n                s.startTime = msTime(parseInt(s.startTime, 10));\n                s.endTime = msTime(parseInt(s.endTime, 10));\n            }\n\n            res += s.id + '\\r\\n';\n            res += s.startTime + ' --> ' + s.endTime + '\\r\\n';\n            res += s.text.replace('\\n', '\\r\\n') + '\\r\\n\\r\\n';\n        }\n\n        return res;\n    };\n\n    var timeMs = function(val) {\n        var regex = /(\\d+):(\\d{2}):(\\d{2}),(\\d{3})/;\n        var parts = regex.exec(val);\n\n        if (parts === null) {\n            return 0;\n        }\n\n        for (var i = 1; i < 5; i++) {\n            parts[i] = parseInt(parts[i], 10);\n            if (isNaN(parts[i])) parts[i] = 0;\n        }\n\n        // hours + minutes + seconds + ms\n        return parts[1] * 3600000 + parts[2] * 60000 + parts[3] * 1000 + parts[4];\n    };\n\n    var msTime = function(val) {\n        var measures = [ 3600000, 60000, 1000 ];\n        var time = [];\n\n        for (var i in measures) {\n            var res = (val / measures[i] >> 0).toString();\n\n            if (res.length < 2) res = '0' + res;\n            val %= measures[i];\n            time.push(res);\n        }\n\n        var ms = val.toString();\n        if (ms.length < 3) {\n            for (i = 0; i <= 3 - ms.length; i++) ms = '0' + ms;\n        }\n\n        return time.join(':') + ',' + ms;\n    };\n\n    return pItems;\n})();\n\n// ignore exports for browser\nif (typeof exports === 'object') {\n    module.exports = parser;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/parser.js\n **/"],"sourceRoot":""}